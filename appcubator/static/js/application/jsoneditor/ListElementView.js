// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function(require, exports, module) {
    var ListElementView, util;
    util = require('util');
    ListElementView = (function() {
      ListElementView.type = "";

      ListElementView.enableMode = false;

      function ListElementView(currentPath, key, parentObj, level) {
        var obj;
        this.currentPath = currentPath;
        this.key = key;
        this.parentObj = parentObj;
        this.level = level;
        this.nameChangeFormSubmitted = __bind(this.nameChangeFormSubmitted, this);
        this.enableEditKeyMode = __bind(this.enableEditKeyMode, this);
        obj = {};
        if (this.title === "ROOT") {
          obj = this.parentObj[this.key];
        } else {
          obj = this.parentObj[this.key];
        }
        this.type = util.getType(obj);
      }

      ListElementView.prototype.render = function() {
        this.domEl = document.createElement('li');
        this.setupDataAttributes();
        this.domEl.innerHTML = '<span class="icon ' + this.type + '"></span><span>' + this.key + '</span>';
        $(this.domEl).on('click', (function(_this) {
          return function(e) {
            if (_this.enableMode === true) {

            } else {
              return manager.navigateToKeyFromEl(e);
            }
          };
        })(this));
        $(this.domEl).on('dblclick', $.proxy(this.enableEditKeyMode));
        return this.domEl;
      };

      ListElementView.prototype.setupDataAttributes = function() {
        this.domEl.dataset.key = this.key;
        this.domEl.dataset.level = this.level;
        return this.domEl.dataset.parentPath = this.currentPath;
      };

      ListElementView.prototype.enableEditKeyMode = function() {
        this.enableMode = true;
        this.domEl.innerHTML = "<form class='name-change-form'><input class='name-input' type='text' value='" + this.key + "''></input></form>";
        $(this.domEl).find('.name-change-form').on('submit', this.nameChangeFormSubmitted);
        return $(this.domEl).find('.name-input').select();
      };

      ListElementView.prototype.nameChangeFormSubmitted = function(e) {
        var newName;
        e.preventDefault();
        newName = $(this.domEl).find('.name-input').val();
        if (newName === this.key) {
          return this.disableEditKeyMode();
        } else if (this.parentObj[newName] !== null && this.parentObj[newName] !== void 0) {
          return alert("This key already exists");
        } else {
          this.parentObj[newName] = this.parentObj[this.key];
          delete this.parentObj[this.key];
          this.key = newName;
          manager.cleanDeeperLevels(this.level + 1);
          this.setupDataAttributes();
          return this.disableEditKeyMode();
        }
      };

      ListElementView.prototype.disableEditKeyMode = function(e) {
        this.enableMode = false;
        return this.domEl.innerHTML = "<span class='icon " + this.type + "'></span><span>" + this.key + "</span>";
      };

      ListElementView.prototype.highlight = function() {
        return $(this.domEl).addClass('selected');
      };

      ListElementView.prototype.unhighlight = function() {
        return $(this.domEl).removeClass('selected');
      };

      ListElementView.prototype.remove = function() {
        return $(this.domEl).remove();
      };

      return ListElementView;

    })();
    return ListElementView;
  });

}).call(this);
